// <auto-generated />
using System;
using FilmsAPI_V2.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FilmsAPI_V2.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230928195013_MoviesActorsCommentaries")]
    partial class MoviesActorsCommentaries
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FilmsAPI_V2.Domain.Entities.Actor", b =>
                {
                    b.Property<int>("ActorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ActorId"));

                    b.Property<string>("ActorName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("actor_name");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("DATE")
                        .HasColumnName("birthdate");

                    b.Property<decimal>("Salary")
                        .HasPrecision(10, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("salary");

                    b.HasKey("ActorId");

                    b.HasIndex("ActorId")
                        .HasDatabaseName("actor_id_idx");

                    b.ToTable("actors", (string)null);
                });

            modelBuilder.Entity("FilmsAPI_V2.Domain.Entities.Commentary", b =>
                {
                    b.Property<int>("CommentaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CommentaryId"));

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<bool>("Recommend")
                        .HasColumnType("boolean");

                    b.HasKey("CommentaryId");

                    b.ToTable("Commentaries");
                });

            modelBuilder.Entity("FilmsAPI_V2.Domain.Entities.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("genre_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("GenreId"));

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("genre_name");

                    b.HasKey("GenreId");

                    b.HasIndex("GenreId")
                        .HasDatabaseName("genre_id_idx");

                    b.ToTable("genres", (string)null);
                });

            modelBuilder.Entity("FilmsAPI_V2.Domain.Entities.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MovieId"));

                    b.Property<bool>("IsInCinema")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_in_cinema");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("DATE")
                        .HasColumnName("release_date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("title");

                    b.HasKey("MovieId");

                    b.HasIndex("MovieId")
                        .HasDatabaseName("movie_id_idx");

                    b.ToTable("films", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
